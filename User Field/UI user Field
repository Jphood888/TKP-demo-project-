<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>TKP Hostel Chat</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"/>
  <style>/* Copy Protection Styles */
    * {
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
      -webkit-touch-callout: none;
      -webkit-tap-highlight-color: transparent;
    }
    body {
      background-color: #0a0a0a;
      color: #fff;
      font-family: 'Segoe UI', sans-serif;
      margin: 0;
      padding: 0;
      display: none;
      opacity: 0;
    }

    #loader {
      position: fixed;
      top: 0; left: 0;
      width: 100%; height: 100%;
      background: #0a0a0a;
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 9999;
    }

    #passwordScreen, #confirmAccess, #successMessage {
      display: none;
      opacity: 0;
      transition: opacity 0.5s ease;
      position: fixed;
      top: 0; left: 0;
      width: 100%; height: 100%;
      background-color: #0a0a0a;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      z-index: 1000;
    }

    #passwordInput {
      padding: 10px;
      font-size: 16px;
      margin-top: 20px;
    }

    #passwordInput.locked {
      background-color: #333;
      color: #999;
    }

    #errorMsg, #lockoutTimer {
      margin-top: 10px;
      color: #ff5c5c;
      font-size: 14px;
    }

    .shake {
      animation: shake 0.5s;
    }

    @keyframes shake {
      0% { transform: translateX(0); }
      25% { transform: translateX(-5px); }
      50% { transform: translateX(5px); }
      75% { transform: translateX(-5px); }
      100% { transform: translateX(0); }
    }

    #customPopup {
      position: fixed;
      top: 0; left: 0;
      width: 100%; height: 100%;
      background: rgba(0,0,0,0.8);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 2000;
    }

    .popup-content {
      background: #1b1b1b;
      padding: 30px;
      border-radius: 10px;
      text-align: center;
    }

    .popup-buttons button {
      margin: 10px;
      padding: 10px 20px;
      font-size: 16px;
      cursor: pointer;
    }

    /* Your Main Page Styles */
    .page-container {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      min-height: 100vh;
      padding: 40px 20px;
    }

    .watermark {
      font-size: 22px;
      font-weight: 600;
      color: #888;
      margin-bottom: 50px;
      text-align: center;
      letter-spacing: 1px;
      opacity: 0.8;
    }

    .selection-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 25px;
      width: 100%;
      max-width: 820px;
    }

    .select-card {
      background-color: #1b1b1b;
      border: 1px solid #2a2a2a;
      border-radius: 16px;
      padding: 32px 24px;
      text-align: center;
      transition: all 0.3s ease;
      box-shadow: 0 0 10px rgba(255, 255, 255, 0.02);
    }

    .select-card:hover {
      transform: translateY(-4px);
      box-shadow: 0 0 25px rgba(255, 255, 255, 0.05);
    }

    .select-card a {
      text-decoration: none;
      color: inherit;
      display: block;
    }

    .select-card i {
      font-size: 40px;
      color: #bbb;
      margin-bottom: 20px;
    }

    .select-card h3 {
      font-size: 20px;
      margin: 0 0 12px;
      color: #f1f1f1;
    }

    .select-card p {
      font-size: 14.5px;
      color: #ccc;
      line-height: 1.6;
      margin: 0;
    }

    @media (max-width: 500px) {
      .select-card {
        padding: 28px 20px;
      }

      .select-card i {
        font-size: 32px;
      }

      .select-card h3 {
        font-size: 18px;
      }
    }
  </style>
</head>
<body>

<div id="loader">Loading...</div>

<div id="passwordScreen" class="screen">
  <h2>Enter Access Password</h2>
  <input type="password" id="passwordInput" placeholder="Password" />
  <div id="errorMsg"></div>
  <div id="lockoutTimer"></div>
</div>

<div id="confirmAccess" class="screen">
  <h2>Access Granted</h2>
</div>

<div id="successMessage" class="screen">
  <h2>Welcome to TKP Campus/Hostel Chat!</h2>
</div>

<div id="mainContent" style="display:none; opacity:0;">
  <div class="page-container">
    <div class="watermark">TKP APP by Julian Pearse</div>

    <div class="selection-grid">
      <div class="select-card">
        <a href="go:usersf">
          <i class="fas fa-user"></i>
          <h3>User</h3>
          <p>Enter your student dashboard, manage your details, and customize your experience.</p>
        </a>
      </div>

      <div class="select-card">
        <a href="go:Schoolchat">
          <i class="fas fa-comments"></i>
          <h3>School App Chats</h3>
          <p>Join real-time chats, connect with other students, and follow official announcements.</p>
        </a>
      </div>

      <div class="select-card">
        <a href="go:Hostelchat">
          <i class="fas fa-bed"></i>
          <h3>Hostel App Chat</h3>
          <p>Chat with hostel mates, report issues, or get important hostel updates from staff.</p>
        </a>
      </div>
    </div>
  </div>
</div>


<script>
let attempts = 0;
let lockoutTime = 0;
let lockoutTimer;
const passwordCorrect = 'TKPOFFICIAL';

function startLockout(duration) {
  lockoutTime = duration;
  localStorage.setItem('lockoutTime', lockoutTime);
  localStorage.setItem('lockoutStart', Date.now());
  updateLockoutDisplay();
  document.getElementById('passwordInput').disabled = true;
  document.getElementById('passwordInput').classList.add('locked');

  lockoutTimer = setInterval(() => {
    lockoutTime--;
    localStorage.setItem('lockoutTime', lockoutTime);
    updateLockoutDisplay();
    if (lockoutTime <= 0) {
      clearInterval(lockoutTimer);
      localStorage.removeItem('lockoutTime');
      localStorage.removeItem('lockoutStart');
      document.getElementById('passwordInput').disabled = false;
      document.getElementById('passwordInput').classList.remove('locked');
      document.getElementById('lockoutTimer').textContent = "";
      attempts = 0;
    }
  }, 1000);
}

function updateLockoutDisplay() {
  const minutes = Math.floor(lockoutTime / 60);
  const seconds = lockoutTime % 60;
  document.getElementById('lockoutTimer').textContent = `Locked. Try again in ${minutes}m ${seconds}s`;
}

function checkPassword() {
  const input = document.getElementById('passwordInput');
  const errorMsg = document.getElementById('errorMsg');

  if (lockoutTime > 0) return;

  if (input.value.trim() === passwordCorrect) {
    localStorage.setItem('tkp_access', 'granted');
    successAnimation();
  } else {
    attempts++;
    input.classList.add('shake');
    setTimeout(() => input.classList.remove('shake'), 500);

    if (attempts === 4) {
      startLockout(60);
    } else if (attempts === 8) {
      startLockout(1800);
    } else if (attempts === 9) {
      startLockout(2 * 24 * 3600);
    }
    errorMsg.textContent = `Incorrect password. Attempt ${attempts}.`;
  }
}

function successAnimation() {
  document.getElementById('passwordScreen').style.opacity = '0';
  setTimeout(() => {
    document.getElementById('passwordScreen').style.display = 'none';
    document.getElementById('confirmAccess').style.display = 'flex';
    setTimeout(() => {
      document.getElementById('confirmAccess').style.opacity = '1';
    }, 100);
  }, 600);

  setTimeout(() => {
    document.getElementById('confirmAccess').style.opacity = '0';
    setTimeout(() => {
      document.getElementById('confirmAccess').style.display = 'none';
      document.getElementById('successMessage').style.display = 'flex';
      setTimeout(() => {
        document.getElementById('successMessage').style.opacity = '1';
      }, 100);

      setTimeout(() => {
        document.getElementById('successMessage').style.opacity = '0';
        setTimeout(() => {
          document.getElementById('successMessage').style.display = 'none';
          document.getElementById('mainContent').style.display = 'block';
          setTimeout(() => {
            document.getElementById('mainContent').style.opacity = '1';
          }, 100);

          openStayLoggedPopup();
        }, 600);
      }, 3000);
    }, 600);
  }, 3000);
}

function openStayLoggedPopup() {
  const popup = document.createElement('div');
  popup.id = 'customPopup';
  popup.innerHTML = `
    <div class="popup-content">
      <h2>Stay Logged In?</h2>
      <p>Do you want to stay logged in and skip password next time?</p>
      <div class="popup-buttons">
        <button id="popupYes">Yes</button>
        <button id="popupNo">No</button>
      </div>
    </div>
  `;
  document.body.appendChild(popup);

  document.getElementById('popupYes').onclick = function() {
    closePopup();
  };
  document.getElementById('popupNo').onclick = function() {
    localStorage.removeItem('tkp_access');
    closePopup();
  };
}

function closePopup() {
  const popup = document.getElementById('customPopup');
  if (popup) {
    popup.classList.add('fadeOut');
    setTimeout(() => {
      popup.remove();
    }, 300);
  }
}

window.onload = function() {
  setTimeout(() => {
    document.getElementById('loader').style.opacity = '0';
    setTimeout(() => {
      document.getElementById('loader').style.display = 'none';
      document.body.style.display = 'block';
      document.body.style.opacity = '1';

      if (localStorage.getItem('tkp_access') === 'granted') {
        document.getElementById('mainContent').style.display = 'block';
        setTimeout(() => {
          document.getElementById('mainContent').style.opacity = '1';
        }, 100);
      } else {
        if (localStorage.getItem('lockoutTime')) {
          lockoutTime = parseInt(localStorage.getItem('lockoutTime'));
          if (lockoutTime > 0) {
            startLockout(lockoutTime);
          }
        }
        document.getElementById('passwordScreen').style.display = 'flex';
        setTimeout(() => {
          document.getElementById('passwordScreen').style.opacity = '1';
        }, 100);
      }
    }, 800);
  }, 1500);
};

document.addEventListener('keydown', function(event) {
  if (event.key === 'Enter') {
    checkPassword();
  }
});
</script>
</body>
</html>
