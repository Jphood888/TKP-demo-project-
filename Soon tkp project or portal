<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>TKP Loading...</title>
  <style>
/* Copy Protection Styles */
    * {
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
      -webkit-touch-callout: none;
      -webkit-tap-highlight-color: transparent;
    }
    @import url('https://fonts.googleapis.com/css2?family=Cinzel:wght@400;600;700&display=swap');
    
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      background: linear-gradient(135deg, #0a0a0a 0%, #1a1a2e 50%, #16213e 100%);
      font-family: 'Cinzel', serif;
      overflow: hidden;
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      position: fixed;
      width: 100%;
      top: 0;
      left: 0;
    }

    .loader-container {
      text-align: center;
      position: relative;
      z-index: 10;
      will-change: transform, opacity;
      transform: translateZ(0);
      backface-visibility: hidden;
    }

    .main-title {
      font-size: clamp(2.5rem, 8vw, 6rem);
      font-weight: 700;
      color: transparent;
      background: linear-gradient(45deg, #00d4ff, #0099cc, #ffffff, #00d4ff);
      background-size: 400% 400%;
      -webkit-background-clip: text;
      background-clip: text;
      animation: gradientShift 3s ease-in-out infinite, textGlow 2s ease-in-out infinite alternate;
      margin-bottom: 1rem;
      letter-spacing: 0.1em;
      text-shadow: 0 0 30px rgba(0, 212, 255, 0.5);
      will-change: background-position, text-shadow;
    }

    .subtitle {
      font-size: clamp(1rem, 3vw, 2rem);
      font-weight: 400;
      color: transparent;
      background: linear-gradient(45deg, #b8c6db, #f5f7fa, #b8c6db);
      background-size: 200% 200%;
      -webkit-background-clip: text;
      background-clip: text;
      animation: gradientShift 4s ease-in-out infinite, fadeInUp 2s ease-out 0.5s forwards;
      margin-bottom: 3rem;
      opacity: 0;
      letter-spacing: 0.15em;
    }

    .loading-bar-container {
      width: 300px;
      height: 6px;
      background: rgba(255, 255, 255, 0.1);
      border-radius: 10px;
      margin: 2rem auto;
      overflow: hidden;
      box-shadow: 0 0 20px rgba(0, 212, 255, 0.3);
    }

    .loading-bar {
      height: 100%;
      background: linear-gradient(90deg, #00d4ff, #0099cc, #ffffff, #00d4ff);
      background-size: 200% 100%;
      border-radius: 10px;
      width: 0%;
      animation: loadProgress 4s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards, gradientFlow 2s ease-in-out infinite;
      box-shadow: 0 0 15px rgba(0, 212, 255, 0.8);
      will-change: width, background-position;
    }

    .loading-text {
      color: transparent;
      background: linear-gradient(45deg, #00d4ff, #0099cc, #ffffff);
      background-size: 200% 200%;
      -webkit-background-clip: text;
      background-clip: text;
      animation: gradientShift 3s ease-in-out infinite, fadeIn 1s ease-out 1s forwards;
      font-size: 1.2rem;
      font-weight: 600;
      margin-top: 1rem;
      opacity: 0;
    }

    .loading-percentage {
      color: transparent;
      background: linear-gradient(45deg, #ffffff, #00d4ff, #ffffff);
      background-size: 200% 200%;
      -webkit-background-clip: text;
      background-clip: text;
      animation: gradientShift 2s ease-in-out infinite, fadeIn 1s ease-out 1.5s forwards;
      font-size: 1.5rem;
      font-weight: 700;
      margin-top: 1rem;
      opacity: 0;
    }

    .orbit-container {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 600px;
      height: 600px;
      z-index: 1;
      will-change: transform;
    }

    .orbit {
      position: absolute;
      border: 2px solid rgba(0, 212, 255, 0.2);
      border-radius: 50%;
      animation: rotate 20s linear infinite;
      will-change: transform;
    }

    .orbit:nth-child(1) {
      width: 200px;
      height: 200px;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      animation-duration: 10s;
    }

    .orbit:nth-child(2) {
      width: 350px;
      height: 350px;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      animation-duration: 15s;
      animation-direction: reverse;
    }

    .orbit:nth-child(3) {
      width: 500px;
      height: 500px;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      animation-duration: 25s;
    }

    .orbit-dot {
      position: absolute;
      width: 8px;
      height: 8px;
      background: linear-gradient(45deg, #00d4ff, #ffffff);
      border-radius: 50%;
      box-shadow: 0 0 15px #00d4ff;
      top: -4px;
      left: 50%;
      transform: translateX(-50%);
      animation: dotPulse 2s ease-in-out infinite;
    }

    .background-particles {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      z-index: 0;
    }

    .particle {
      position: absolute;
      background: linear-gradient(45deg, #00d4ff, #ffffff, #0099cc);
      border-radius: 50%;
      opacity: 0;
      animation: float 6s ease-in-out infinite;
      will-change: transform, opacity;
      transform: translateZ(0);
      backface-visibility: hidden;
    }

    .soon-container {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(135deg, #0a0a0a 0%, #1a1a2e 50%, #16213e 100%);
      justify-content: center;
      align-items: center;
      flex-direction: column;
      z-index: 50;
    }

    .soon-container.show {
      display: flex;
      animation: fadeIn 1s ease-out;
    }

    .soon-text {
      font-size: clamp(4rem, 15vw, 12rem);
      font-weight: 700;
      color: transparent;
      background: linear-gradient(45deg, #ff6b6b, #ffd93d, #6bcf7f, #4d79ff, #ff6b6b, #ff9f43, #ee5a52);
      background-size: 400% 400%;
      -webkit-background-clip: text;
      background-clip: text;
      animation: 
        rainbowShift 3s ease-in-out infinite,
        bounce 2s ease-in-out infinite,
        textPulse 1.5s ease-in-out infinite,
        colorCycle 4s ease-in-out infinite;
      letter-spacing: 0.2em;
      text-shadow: 0 0 50px rgba(255, 255, 255, 0.5);
      font-family: 'Cinzel', serif;
      will-change: transform, background-position, text-shadow;
      transform: translateZ(0);
      backface-visibility: hidden;
      margin-bottom: 2rem;
    }

    .watermark-soon {
      font-size: 0.9rem;
      color: rgba(255, 255, 255, 0.4);
      font-family: 'Segoe UI', sans-serif;
      text-align: center;
      background: linear-gradient(45deg, rgba(255, 255, 255, 0.3), rgba(0, 212, 255, 0.3), rgba(255, 255, 255, 0.3));
      background-size: 200% 200%;
      -webkit-background-clip: text;
      background-clip: text;
      animation: gradientShift 3s ease-in-out infinite;
      letter-spacing: 0.1em;
    }

    @keyframes gradientShift {
      0%, 100% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
    }

    @keyframes gradientFlow {
      0% { background-position: 0% 50%; }
      100% { background-position: 200% 50%; }
    }

    @keyframes rainbowShift {
      0%, 100% { background-position: 0% 50%; }
      25% { background-position: 100% 25%; }
      50% { background-position: 200% 50%; }
      75% { background-position: 300% 75%; }
    }

    @keyframes colorCycle {
      0% { filter: hue-rotate(0deg) saturate(1.2); }
      25% { filter: hue-rotate(90deg) saturate(1.5); }
      50% { filter: hue-rotate(180deg) saturate(1.8); }
      75% { filter: hue-rotate(270deg) saturate(1.5); }
      100% { filter: hue-rotate(360deg) saturate(1.2); }
    }

    @keyframes bounce {
      0%, 100% { transform: translateY(0) scale(1); }
      50% { transform: translateY(-20px) scale(1.05); }
    }

    @keyframes textPulse {
      0%, 100% { 
        text-shadow: 0 0 50px rgba(255, 255, 255, 0.5);
      }
      50% { 
        text-shadow: 
          0 0 80px rgba(255, 255, 255, 0.8), 
          0 0 120px rgba(255, 107, 107, 0.4),
          0 0 160px rgba(107, 255, 107, 0.3);
      }
    }

    @keyframes textGlow {
      0% { text-shadow: 0 0 30px rgba(0, 212, 255, 0.5); }
      100% { text-shadow: 0 0 50px rgba(0, 212, 255, 0.8), 0 0 80px rgba(0, 212, 255, 0.4); }
    }

    @keyframes dotPulse {
      0%, 100% { 
        transform: translateX(-50%) scale(1);
        box-shadow: 0 0 15px #00d4ff;
      }
      50% { 
        transform: translateX(-50%) scale(1.3);
        box-shadow: 0 0 25px #00d4ff, 0 0 35px rgba(255, 255, 255, 0.5);
      }
    }

    @keyframes fadeInUp {
      0% {
        opacity: 0;
        transform: translateY(30px);
      }
      100% {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes fadeIn {
      0% { opacity: 0; }
      100% { opacity: 1; }
    }

    @keyframes loadProgress {
      0% { width: 0%; }
      100% { width: 100%; }
    }

    @keyframes rotate {
      0% { transform: translate(-50%, -50%) rotate(0deg); }
      100% { transform: translate(-50%, -50%) rotate(360deg); }
    }

    @keyframes float {
      0%, 100% {
        opacity: 0;
        transform: translateY(100vh) scale(0);
      }
      10% {
        opacity: 1;
        transform: translateY(90vh) scale(1);
      }
      90% {
        opacity: 1;
        transform: translateY(-10vh) scale(1);
      }
    }

    .loader-container.fade-out {
      animation: fadeOut 1s ease-out forwards;
    }

    @keyframes fadeOut {
      0% { opacity: 1; transform: scale(1); }
      100% { opacity: 0; transform: scale(0.8); }
    }

    .watermark {
      position: fixed;
      bottom: 20px;
      right: 20px;
      font-size: 0.9rem;
      color: rgba(255, 255, 255, 0.3);
      font-family: 'Segoe UI', sans-serif;
      z-index: 100;
    }
  </style>
</head>
<body>
  <div class="background-particles" id="particles"></div>
  
  <div class="orbit-container">
    <div class="orbit">
      <div class="orbit-dot"></div>
    </div>
    <div class="orbit">
      <div class="orbit-dot"></div>
    </div>
    <div class="orbit">
      <div class="orbit-dot"></div>
    </div>
  </div>

  <div class="loader-container" id="loader">
    <div class="main-title">TIMEON KAIROS</div>
    <div class="subtitle">Polytechnic Institute</div>
    
    <div class="loading-bar-container">
      <div class="loading-bar" id="loadingBar"></div>
    </div>
    
    <div class="loading-text">Loading Excellence...</div>
    <div class="loading-percentage" id="percentage">0%</div>
  </div>

  <div class="soon-container" id="soonContainer">
    <div class="soon-text">SOON</div>
    <div class="watermark-soon">TKP App by Julian Pearse</div>
  </div>

  <div class="watermark">TKP App by Julian Pearse</div>

  <script>
    // Optimized particle creation for smooth performance
    function createParticles() {
      const particlesContainer = document.getElementById('particles');
      const particleCount = 25; // Reduced for better performance
      
      for (let i = 0; i < particleCount; i++) {
        const particle = document.createElement('div');
        particle.className = 'particle';
        particle.style.left = Math.random() * 100 + '%';
        const size = Math.random() * 3 + 2 + 'px';
        particle.style.width = size;
        particle.style.height = size;
        particle.style.animationDelay = Math.random() * 6 + 's';
        particle.style.animationDuration = (Math.random() * 3 + 4) + 's';
        particlesContainer.appendChild(particle);
      }
    }

    // Smooth loading simulation with requestAnimationFrame
    function simulateLoading() {
      const loadingBar = document.getElementById('loadingBar');
      const percentage = document.getElementById('percentage');
      const loader = document.getElementById('loader');
      const soonContainer = document.getElementById('soonContainer');
      
      let progress = 0;
      const totalTime = 4000; // 4 seconds
      const startTime = performance.now();
      
      function updateProgress(currentTime) {
        const elapsed = currentTime - startTime;
        progress = Math.min((elapsed / totalTime) * 100, 100);
        
        percentage.textContent = Math.floor(progress) + '%';
        
        if (progress < 100) {
          requestAnimationFrame(updateProgress);
        } else {
          // Smooth transition to SOON
          setTimeout(() => {
            loader.classList.add('fade-out');
            
            setTimeout(() => {
              loader.style.display = 'none';
              soonContainer.classList.add('show');
            }, 1000);
          }, 500);
        }
      }
      
      requestAnimationFrame(updateProgress);
    }

    // Initialize with optimized performance
    document.addEventListener('DOMContentLoaded', function() {
      createParticles();
      simulateLoading();
    });
  </script>
</body>
</html>
